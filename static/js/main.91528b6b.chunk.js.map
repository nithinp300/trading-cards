{"version":3,"sources":["components/PaginationBar.js","react-auth0-spa.js","components/TradingCard.js","components/SortFilterSearch.js","components/Monsters.js","components/Spells.js","components/Error.js","components/TradingCardInstance.js","components/NavBar.js","components/Profile.js","utils/history.js","components/PrivateRoute.js","components/Deck.js","App.js","serviceWorker.js","index.js"],"names":["PaginationBar","props","style","margin","Pagination","First","disabled","currentPage","onClick","handlePaginationClick","Prev","Item","Next","lastPage","Last","DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","Auth0Provider","children","onRedirectCallback","initOptions","useState","isAuthenticated","setIsAuthenticated","user","setUser","auth0Client","setAuth0","loading","setLoading","popupOpen","setPopupOpen","useEffect","a","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","initAuth0","loginWithPopup","params","console","error","Provider","value","getIdTokenClaims","loginWithRedirect","getTokenSilently","getTokenWithPopup","logout","TradingCard","inDeck","setInDeck","handleAddClick","cardData","monster","log","axios","post","then","res","status","handleRemoveClick","delete","id","data","get","deckArr","i","length","card_images","to","url","textDecoration","src","image_url","alt","name","height","width","SortFilterSearch","MonsterOptions","map","typeName","TypeOptions","float","class","onChange","handleChange","attribute","type","query","placeholder","marginLeft","sort","Monsters","makePaginationRequest","state","fetch","page","method","headers","response","json","setState","isLoading","monsters","total","per_page","total_pages","makeSearchRequest","bind","this","queryString","stringify","q","parse","prevProps","prevState","querySelectorAll","forEach","el","checked","event","target","monsterCards","Col","md","isLoaded","Spinner","animation","Container","fluid","Row","Component","searchClient","algoliasearch","Hit","hit","image","align","className","Highlight","price","Spells","InstantSearch","indexName","ClearRefinements","RefinementList","Configure","hitsPerPage","SearchBox","Hits","hitComponent","Error","TradingCardInstance","match","catch","cardSets","card_sets","sets","set","set_name","padding","level","race","atk","def","desc","NavBar","Navbar","bg","variant","Brand","href","Nav","Link","redirect_uri","Profile","selectedFile","setSelectedFile","cardName","setCardName","setCardData","JSON","files","form","FormData","append","process","regions","lines","words","nameArr","push","text","join","lastModifiedDate","toDateString","createBrowserHistory","PrivateRoute","component","path","rest","targetUrl","fn","render","Deck","cards","onFileChange","onFileUpload","searchQuery","currentComponent","makeAddRequest","card","App","exact","Home","Traps","Boolean","hostname","ReactDOM","domain","config","client_id","clientId","origin","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.91528b6b.chunk.js","sourcesContent":["import React from 'react';\nimport Pagination from 'react-bootstrap/Pagination'\n\nexport default function PaginationBar(props){\n  return(\n    <div style={{margin:\"auto\"}}>\n      <Pagination>\n        <Pagination.First disabled={props.currentPage === 1} \n        onClick={() => props.handlePaginationClick(1)}/>\n        <Pagination.Prev disabled={props.currentPage === 1}\n        onClick={() => props.handlePaginationClick(props.currentPage-1)}/>\n        <Pagination.Item>{props.currentPage}</Pagination.Item>\n        <Pagination.Next disabled={props.currentPage === props.lastPage} \n        onClick={() => props.handlePaginationClick(props.currentPage+1)}/>\n        <Pagination.Last disabled={props.currentPage === props.lastPage} \n        onClick={() => props.handlePaginationClick(props.lastPage)}/>\n      </Pagination>\n    </div>\n  );\n}","import React, { useState, useEffect, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes(\"code=\") &&\n          window.location.search.includes(\"state=\")) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p)\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};","import React, {useState, useEffect} from 'react';\nimport {Link, useRouteMatch} from 'react-router-dom';\nimport { useAuth0 } from \"../react-auth0-spa\";\nimport axios from 'axios';\n\nfunction TradingCard(props) {\n  const [inDeck, setInDeck] = useState(props.inDeck);\n\n  useEffect(() => {\n    axios.get(`http://localhost:5000/api/cards`)\n    .then(res => {\n      let deckArr = res.data;\n      let i = 0;\n      for(i = 0; i < deckArr.length; i++){\n        if(props.monster.id === deckArr[i].id) {\n          setInDeck(true);\n        }\n      }\n    })\n  }, []);\n  function handleAddClick(){\n    let cardData = props.monster\n    console.log(cardData)\n    // make a post request with card data\n    axios.post(`http://localhost:5000/api/cards`, cardData)\n      .then(res => {\n        console.log(res);\n        console.log(res.status);\n        setInDeck(true)\n        //alert(`${cardData.name} was added to your Deck!`);\n      })\n  }\n\n  function handleRemoveClick(){\n    axios.delete(`http://localhost:5000/api/cards/${props.monster.id}`)\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n        setInDeck(false);\n        //alert(`${props.monster.name} was removed from your Deck`);\n      })\n  }\n  function showButton(){\n    if(inDeck){\n      return(<button style={{width:\"100%\"}} onClick={handleRemoveClick}>Remove</button>)\n    }\n    else{\n      return(<button style={{width:\"100%\"}} onClick={handleAddClick}>Add</button>)\n    }\n  }\n  const { isAuthenticated } = useAuth0();\n  if (!props.monster.card_images) return null;\n  return(\n    <div style={{margin:\"2rem\"}}>\n      <Link to={`${props.url}/${props.monster.id}`} style={{textDecoration:\"none\"}}>\n        <img src={props.monster.card_images[0].image_url} alt={props.monster.name} height=\"400\" width=\"286\"></img>\n      </Link>\n      {showButton()}\n    </div>\n  )\n}\n\nexport default TradingCard","import React from 'react';\n\nfunction SortFilterSearch(props) {\n  let classData = ['Normal Monster', 'Normal Tuner Monster', 'Effect Monster', \n  'Tuner Monster', 'Flip Effect Monster', 'Spirit Monster', 'Union Effect Monster', \n  'Gemini Monster', 'Pendulum Effect Monster', 'Pendulum Normal Monster', \n  'Pendulum Tuner Effect Monster', 'Ritual Monster', 'Ritual Effect Monster', \n  'Toon Monster', 'Fusion Monster', 'Synchro Monster', 'Synchro Tuner Monster', \n  'Synchro Pendulum Effect Monster', 'XYZ Monster', 'XYZ Pendulum Effect Monster', \n  'Link Monster', 'Pendulum Flip Effect Monster', 'Pendulum Effect Fusion Monster'];\n  let MonsterOptions = classData.map(typeName => {\n    return(<option value={typeName}>{typeName}</option>)\n  })\n  let typeData = ['Aqua', 'Beast', 'Beast-Warrior', 'Cyberse', \n  'Dinosaur', 'Divine-Beast', 'Dragon', 'Fairy', 'Fiend', \n  'Fish', 'Insect', 'Machine', 'Plant', 'Psychic', 'Pyro', \n  'Reptile', 'Rock', 'Sea Serpent', 'Spellcaster', 'Thunder', \n  'Warrior', 'Winged Beast', 'Wyrm', 'Zombie']\n  let TypeOptions = typeData.map(typeName => {\n    return(<option value={typeName}>{typeName}</option>)\n  })\n  return(\n    <div>\n      <div style={{float:\"left\"}}>\n        <label>&nbsp; Classification:&nbsp;</label>\n        <select value={props.class} onChange={props.handleChange} name=\"class\">\n          <option value=\"\">Choose</option>\n          {MonsterOptions}\n        </select>\n        <label>&nbsp; Attribute:&nbsp;</label>\n        <select value={props.attribute} onChange={props.handleChange} name=\"attribute\">\n          <option value=\"\">Choose</option>\n          <option value=\"DARK\">Dark</option>\n          <option value=\"DIVINE\">Divine</option>\n          <option value=\"EARTH\">Earth</option>\n          <option value=\"FIRE\">Fire</option>\n          <option value=\"LIGHT\">Light</option>\n          <option value=\"WATER\">Water</option>\n          <option value=\"WIND\">Wind</option>\n        </select>\n        <label>&nbsp; Type:&nbsp;</label>\n        <select value={props.type} onChange={props.handleChange} name=\"type\">\n          <option value=\"\">Choose</option>\n          {TypeOptions}\n        </select>\n        <input name=\"query\" type=\"text\" value={props.query} placeholder=\"Search\" onChange={props.handleChange} style={{marginLeft:\"1.5rem\"}}></input>\n      </div>\n      <div style={{float:\"right\"}}>\n        <label>Sort by &nbsp;</label>\n        <select value={props.sort} onChange={props.handleChange} name=\"sort\">\n          <option value=\"name\">Name: A to Z</option>\n          <option value=\"-name\">Name: Z to A</option>\n          <option value=\"atk\">ATK: Low to High</option>\n          <option value=\"-atk\">ATK: High to Low</option>\n          <option value=\"def\">DEF: Low to High</option>\n          <option value=\"-def\">DEF: High to Low</option>\n          <option value=\"level\">Level: Low to High</option>\n          <option value=\"-level\">Level: High to Low</option>\n        </select>\n      </div>\n    </div>\n  )\n}\n\nexport default SortFilterSearch","import React, {Component} from 'react';\nimport PaginationBar from './PaginationBar'\nimport {Container, Row, Col, Spinner} from 'react-bootstrap'\nimport TradingCard from './TradingCard'\nimport SortFilterSearch from './SortFilterSearch'\nimport queryString from 'query-string'\nimport axios from 'axios';\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nclass Monsters extends Component {\n  constructor(){\n    super();\n    this.state = {\n      isLoading: true,\n      monsters: [],\n      total: 0,\n      per_page: 6,\n      currentPage: 1,\n      lastPage: 1,\n      sort: \"name\",\n      attribute: \"\",\n      class: \"\",\n      type: \"\",\n      query: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handlePaginationClick = this.handlePaginationClick.bind(this);\n  }\n\n  componentDidMount(){\n    console.log(this.props)\n    console.log(queryString.stringify({q:\"magician\", sort:\"-name\"}))\n    let params = queryString.parse(this.props.location.search)\n    console.log(params)\n    if(typeof params.query !== \"undefined\"){\n      this.makeSearchRequest(params)\n    }\n    else{\n      this.makePaginationRequest(params)\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.query !== this.state.query) {\n      // this.props.history.push({\n      //   pathname: '/monsters',\n      //   search: \"?\" + queryString.stringify({query: this.state.query})\n      // })\n      this.makeSearchRequest({})\n    }\n    else if(prevState.currentPage !== this.state.currentPage) {\n      this.makePaginationRequest({})\n    }\n  }\n\n  makePaginationRequest = async (params) => {\n    if(typeof params[\"page\"] === \"undefined\"){\n      params[\"page\"] = this.state.currentPage\n    }\n    if(typeof params.attribute === \"undefined\"){\n      params[\"attribute\"] = this.state.attribute\n    }\n    if(typeof params.sort === \"undefined\"){\n      params[\"sort\"] = this.state.sort\n    }\n    if(typeof params.class === \"undefined\"){\n      params[\"class\"] = this.state.class\n    }\n    if(typeof params.type === \"undefined\"){\n      params[\"type\"] = this.state.type\n    }\n    const response = await fetch(`https://yugioh-data-service.herokuapp.com/monsters?page=${params.page}&sort=${params.sort}&attribute=${params.attribute}&type=${params.class}&race=${params.type}`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n    });\n\n    const data = await response.json();\n\n    this.setState({\n      isLoading: false,\n      monsters: data.data,\n      total: data.total,\n      per_page: data.per_page,\n      currentPage: data.page,\n      lastPage: data.total_pages,\n      attribute: params.attribute,\n      class: params.class,\n      type: params.type,\n      sort: params.sort\n    });\n  }\n\n  makeSearchRequest = async params => {\n    if(typeof params.query === \"undefined\"){\n      params.query = this.state.query\n    }\n    if(params.query === \"\"){\n      this.makePaginationRequest({})\n    }\n    else{\n      fetch(`https://yugioh-data-service.herokuapp.com/monsters?q=${params.query}`)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          isLoading: false,\n          monsters: data,\n          total: data.length,\n          per_page: data.length,\n          currentPage: 1,\n          lastPage: 1,\n          query: params.query\n        })\n      })\n    }\n  }\n\n  handleClearClick(){\n    document.querySelectorAll('input[type=checkbox]').forEach( el => el.checked = false );\n    this.makePaginationRequest(1)\n  }\n\n  handleChange(event) {\n    console.log(event.target.name)\n    console.log(event.target.value)\n    this.setState({[event.target.name]: event.target.value, isLoading: true})\n    if(event.target.name !== \"query\") {\n      this.makePaginationRequest({[event.target.name]: event.target.value, currentPage: 1})\n    }\n  }\n\n  handlePaginationClick(page) {\n    console.log(page)\n    this.setState({currentPage: page, isLoading: true})\n  }\n\n  render(){\n    let url = \"/monsters\"\n    let monsterCards = this.state.monsters.map(monster => {\n      return(\n        <Col md=\"4\">\n          <TradingCard monster={monster} url={url}></TradingCard>\n        </Col>\n      )\n    })\n    let isLoaded = this.state.isLoading ? <Spinner style={{margin: \"auto\"}} animation=\"border\" /> : monsterCards\n    return(\n      <div>\n        <br></br>\n        <SortFilterSearch\n          handleChange={this.handleChange}\n          {...this.state}>\n        </SortFilterSearch>\n        <Container fluid=\"md\">\n          <Row>\n            <p>&nbsp;</p>\n          </Row>\n          <Row>\n            {isLoaded}\n          </Row>\n          <Row>\n            <PaginationBar\n              handlePaginationClick={this.handlePaginationClick}\n              {...this.state}>\n            </PaginationBar>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Monsters;","import React, {Component} from 'react';\nimport algoliasearch from 'algoliasearch/lite';\nimport './Spells.css';\nimport {\n  InstantSearch,\n  Hits,\n  SearchBox,\n  Pagination,\n  Highlight,\n  ClearRefinements,\n  RefinementList,\n  Configure,\n} from 'react-instantsearch-dom';\nconst searchClient = algoliasearch('XRSO3TSLU8', '658e7558b6f9829eef7e50f382bd32ba');\n\nclass Spells extends Component {\n  render() {\n    return (\n      <div className=\"ais-InstantSearch\">\n        <h1>React InstantSearch e-commerce demo</h1>\n        <InstantSearch indexName=\"demo_ecommerce\" searchClient={searchClient}>\n          <div className=\"left-panel\">\n            <ClearRefinements />\n            <h2>Brands</h2>\n            <RefinementList attribute=\"brand\" />\n            <Configure hitsPerPage={8} />\n          </div>\n          <div className=\"right-panel\">\n            <SearchBox />\n            <Hits hitComponent={Hit}/>\n            <Pagination />\n          </div>\n        </InstantSearch>\n      </div>\n    );\n  }\n}\n\nfunction Hit(props) {\n  return (\n    <div>\n      <img src={props.hit.image} align=\"left\" alt={props.hit.name} />\n      <div className=\"hit-name\">\n        <Highlight attribute=\"name\" hit={props.hit} />\n      </div>\n      <div className=\"hit-description\">\n        <Highlight attribute=\"description\" hit={props.hit} />\n      </div>\n      <div className=\"hit-price\">${props.hit.price}</div>\n    </div>\n  );\n}\n\n\nexport default Spells","import React from 'react';\n\nexport default function Error(){\n  return(\"Sorry, nothing to see here...\")\n}","import React, {Component} from 'react';\nimport {Link, useRouteMatch} from 'react-router-dom';\n\nclass TradingCardInstance extends Component {\n  constructor(){\n    super();\n    this.state = {\n      cardData: {}\n    }\n  }\n\n  componentDidMount(){\n    fetch(`https://yugioh-data-service.herokuapp.com/monsters/${this.props.match.params.id}`)\n    .then(res => res.json())\n    .then((data) => {\n      this.setState({ cardData: data })\n    })\n    .catch(console.log)\n  }\n    \n  render(){\n    console.log(this.state.cardData)\n    if (!this.state.cardData.card_images) return null\n    let cardSets = this.state.cardData.card_sets\n    let sets = \"\"\n    if(typeof cardSets === \"undefined\"){\n      sets = <h5>None</h5>\n    }\n    else{\n      sets = cardSets.map(set => {\n        return(\n          <h5>{set.set_name}</h5>\n        )\n      })\n    }\n    return(\n      <div>\n        <img src={this.state.cardData.card_images[0].image_url} alt=\"card img\" height=\"500px\" width=\"350px\" align=\"left\" style={{margin:\"2rem\"}}></img>\n        <div style={{padding:\"1.5rem\"}}>\n          <h1>{this.state.cardData.name}</h1>\n          <h3>Level {this.state.cardData.level} {this.state.cardData.attribute} Monster</h3>\n          <h3>{this.state.cardData.race}-Type {this.state.cardData.type}</h3>\n          <h4>ATK/ {this.state.cardData.atk} &nbsp;&nbsp;&nbsp;DEF/ {this.state.cardData.def}</h4>\n          <h5>{this.state.cardData.desc}</h5>\n          <br></br>\n          <h4>This card can be found in the following card sets:</h4>\n          {sets}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default TradingCardInstance","import React from \"react\";\nimport {Nav, Navbar} from 'react-bootstrap';\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nconst NavBar = () => {\n  const { isAuthenticated, loginWithRedirect, logout } = useAuth0();\n\n  return (\n    <div>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"/\">Yu-Gi-Oh! Deck</Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/\">Home</Nav.Link>\n          <Nav.Link href=\"/monsters\">Monsters</Nav.Link>\n          <Nav.Link href=\"/spells\">Spells</Nav.Link>\n          <Nav.Link href=\"/traps\">Traps</Nav.Link>\n          {!isAuthenticated && \n          (<Nav.Link onClick={() => loginWithRedirect({redirect_uri: \"http://localhost:3000/monsters\"})}>Log in</Nav.Link>)\n          }\n          {isAuthenticated && <Nav.Link href=\"/profile\">Profile</Nav.Link>}\n          {isAuthenticated && <Nav.Link href=\"/deck\">Deck</Nav.Link>}\n          {isAuthenticated && <Nav.Link onClick={() => logout()}>Log out</Nav.Link>}\n        </Nav>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default NavBar;","import React, { Fragment, useState, useEffect} from \"react\";\nimport { useAuth0 } from \"../react-auth0-spa\";\nimport axios from 'axios';\n\nfunction Profile(){\n  const { loading, user } = useAuth0();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [cardName, setCardName] = useState(\"\");\n  const [cardData, setCardData] = useState(null);\n\n  useEffect(() => {\n  });\n\n  if (loading || !user) {\n    return <div>Loading...</div>;\n  }\n\n  const onFileChange = (event) => {\n    // Update the state \n    setSelectedFile(event.target.files[0]);\n  };\n\n  const fileData = () => {\n    if (cardData) {\n      return (\n        <div> \n          <img src={cardData.card_images[0].image_url}></img>\n          <h2>File Details:</h2> \n          <p>Card Name: {cardName}</p>\n          <p>File Name: {selectedFile.name}</p> \n          <p>File Type: {selectedFile.type}</p> \n          <p> \n            Last Modified:{\" \"} \n            {selectedFile.lastModifiedDate.toDateString()} \n          </p>\n        </div> \n      ); \n    } else { \n      return ( \n        <div> \n          <br /> \n          <h4>Choose before Pressing the Upload button</h4> \n        </div> \n      ); \n    } \n  };\n\n  const onFileUpload = () => {\n    const form = new FormData();\n    form.append('image', selectedFile);\n    axios.post(\n      'https://yugioh-deck.cognitiveservices.azure.com/vision/v2.0/ocr?language=unk&detectOrientation=true', \n      form, \n      { headers: {'Ocp-Apim-Subscription-Key':process.env.REACT_APP_COGNITIVE_SERVICES_API_KEY,'Content-Type': 'multipart/form-data'} })\n    .then(res => {\n      // handle success\n      console.log(res);\n      console.log(res.data);\n      console.log(res.data.regions[0].lines[0].words);\n      let words = res.data.regions[0].lines[0].words;\n      let nameArr = [];\n      for(let i = 0; i < words.length; i++){\n        nameArr.push(words[i].text);\n      }\n      let name = nameArr.join(\" \");\n      console.log(name);\n      setCardName(name);\n      axios.get(`https://yugioh-data-service.herokuapp.com/monsters?q=${name}`)\n        .then(function (response) {\n          // handle success\n          console.log(response.data[0]);\n          setCardData(response.data[0]);\n        })\n        .catch(function (error) {\n          // handle error\n          console.log(error);\n        });\n    })\n    .catch(function (response) {\n      //handle error\n      console.log(response);\n    });\n  };\n\n  return (\n    <Fragment>\n      <code>{JSON.stringify(user, null, 2)}</code>\n      <div>\n        <input type=\"file\" onChange={onFileChange}></input>\n        <button onClick={onFileUpload}>\n          Upload\n        </button>\n      </div>\n      {fileData()}\n    </Fragment>\n  );\n};\n\nexport default Profile;","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();","// src/components/PrivateRoute.js\n\nimport React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nconst PrivateRoute = ({ component: Component, path, ...rest }) => {\n  const { loading, isAuthenticated, loginWithRedirect } = useAuth0();\n\n  useEffect(() => {\n    if (loading || isAuthenticated) {\n      return;\n    }\n    const fn = async () => {\n      await loginWithRedirect({\n        appState: {targetUrl: window.location.pathname}\n      });\n    };\n    fn();\n  }, [loading, isAuthenticated, loginWithRedirect, path]);\n\n  const render = props =>\n    isAuthenticated === true ? <Component {...props} /> : null;\n\n  return <Route path={path} render={render} {...rest} />;\n};\n\nexport default PrivateRoute;","import React, { Component } from \"react\";\nimport axios from 'axios';\nimport {Container, Row, Col, Spinner} from 'react-bootstrap'\nimport TradingCard from './TradingCard'\n\nclass Deck extends Component {\n  constructor(){\n    super();\n    this.state = {\n      cards: [],\n      selectedFile: null\n    }\n    this.onFileChange = this.onFileChange.bind(this);\n    this.onFileUpload = this.onFileUpload.bind(this);\n    this.makeSearchRequest = this.makeSearchRequest.bind(this);\n  }\n  \n  componentDidMount(){\n    axios.get(`http://localhost:5000/api/cards`)\n      .then(res => {\n        const cards = res.data;\n        this.setState({ cards });\n      })\n  }\n\n  componentDidUpdate() {\n    axios.get(`http://localhost:5000/api/cards`)\n    .then(res => {\n      const cards = res.data;\n      this.setState({ cards });\n    })\n  }\n\n  onFileUpload() {\n    const form = new FormData();\n    form.append('image', this.state.selectedFile);\n    axios.post(\n      'https://yugioh-deck.cognitiveservices.azure.com/vision/v2.0/ocr?language=unk&detectOrientation=true', \n      form, \n      { headers: {'Ocp-Apim-Subscription-Key':process.env.REACT_APP_COGNITIVE_SERVICES_API_KEY,'Content-Type': 'multipart/form-data'} })\n    .then(res => {\n      // handle success\n      console.log(res);\n      console.log(res.data);\n      console.log(res.data.regions[0].lines[0].words);\n      let words = res.data.regions[0].lines[0].words;\n      let nameArr = [];\n      for(let i = 0; i < words.length; i++) {\n        nameArr.push(words[i].text);\n      }\n      let name = nameArr.join(\" \");\n      console.log(name);\n      this.makeSearchRequest(name);\n    })\n    .catch(function (response) {\n      //handle error\n      console.log(response);\n    });\n  }\n\n  makeSearchRequest(searchQuery) {\n    const currentComponent = this;\n    axios.get(`https://yugioh-data-service.herokuapp.com/monsters?q=${searchQuery}`)\n      .then(function (response) {\n        // handle success\n        console.log(response.data[0]);\n        currentComponent.makeAddRequest(response.data[0])\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n  }\n\n  makeAddRequest(cardData) {\n    axios.post(`http://localhost:5000/api/cards`, cardData)\n    .then(res => {\n      console.log(res);\n      console.log(res.status);\n      //alert(`${cardData.name} was added to your Deck!`);\n    })\n  }\n\n  onFileChange(event) {\n    // Update the state\n    this.setState({ selectedFile: event.target.files[0] });\n  }\n\n  render(){\n    let url = \"/monsters\"\n    let monsterCards = this.state.cards.map(card => {\n      return(\n        <Col md=\"4\">\n          <TradingCard monster={card} url={url} inDeck={true}></TradingCard>\n        </Col>\n      )\n    })\n\n    const fileData = () => {\n      if (this.state.selectedFile) {\n        return (\n          <div> \n            <h2>File Details:</h2> \n            <p>File Name: {this.state.selectedFile.name}</p> \n            <p>File Type: {this.state.selectedFile.type}</p> \n            <p> \n              Last Modified:{\" \"} \n              {this.state.selectedFile.lastModifiedDate.toDateString()} \n            </p>\n          </div> \n        ); \n      } else { \n        return ( \n          <div> \n            <br /> \n            <h4>Choose before Pressing the Upload button</h4> \n          </div> \n        ); \n      } \n    }\n    return(\n      <div>\n        <Container fluid=\"md\">\n          {/* <Row>\n            <p>&nbsp;</p>\n          </Row> */}\n          <Row>\n            <div style={{margin: \"auto\"}}>\n              <h4>Upload an image of a card to add to your Deck</h4>\n              <input type=\"file\" onChange={this.onFileChange}></input>\n              <button onClick={this.onFileUpload}>Upload</button>\n            </div>\n          </Row>\n          <Row>\n            {monsterCards}\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Deck;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Router, Switch, Route} from 'react-router-dom';\nimport Monsters from './components/Monsters';\nimport Spells from './components/Spells'\nimport Error from './components/Error'\nimport TradingCardInstance from './components/TradingCardInstance'\nimport NavBar from \"./components/NavBar\";\nimport Profile from \"./components/Profile\";\nimport history from \"./utils/history\";\nimport { useAuth0 } from \"./react-auth0-spa\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Deck from \"./components/Deck\";\n\nexport default function App(){\n  const { loading } = useAuth0();\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return(\n    <div>\n      <NavBar />\n      <Router history={history}>\n        <Switch>\n          <Route path=\"/\" exact component={Home}/>\n          <Route path=\"/traps\" component={Traps}/>\n          <Route path=\"/spells\" component={Spells}/>\n          <Route path=\"/monsters\" exact component={Monsters}/>\n          <Route path=\"/monsters/:id\" component={TradingCardInstance}/>\n          <PrivateRoute path=\"/profile\" component={Profile} />\n          <PrivateRoute path=\"/deck\" component={Deck} />\n          <Route component={Error}/>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nfunction Home() {\n    return <h2>Home</h2>;\n}\n\nfunction Traps() {\n  return <h2>Traps</h2>;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Auth0Provider } from \"./react-auth0-spa\";\nimport config from \"./auth_config.json\";\nimport history from \"./utils/history\";\n\n// A function that routes the user to the right place\n// after login\nconst onRedirectCallback = appState => {\n  history.push(\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nReactDOM.render(\n  <Auth0Provider\n    domain={config.domain}\n    client_id={config.clientId}\n    redirect_uri={window.location.origin}\n    onRedirectCallback={onRedirectCallback}\n  >\n    <App />\n  </Auth0Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}